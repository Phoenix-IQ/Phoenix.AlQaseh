name: CI/CD - Build and Publish Phoenix.AlQaseh

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'           # publish on version tags
  pull_request:
    branches: [ master ]

permissions:
  contents: read
  packages: write   # required to publish to GitHub Packages

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: 📦 Restore dependencies
        run: dotnet restore

      - name: 🛠️ Build
        run: dotnet build --configuration Release --no-restore

      - name: ✅ Run Tests
        run: dotnet test --configuration Release --no-build --verbosity normal

      # If this is a tag build (refs/tags/v*), extract version from tag -> env.VERSION
      - name: 🔢 Extract version from tag (if tagged)
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: 📦 Pack (use tag version if present)
        run: |
          if [ -n "${VERSION}" ]; then
            echo "Packing with version ${VERSION}"
            dotnet pack Phoenix.AlQaseh/Phoenix.AlQaseh.csproj \
              --configuration Release \
              -p:Version=${VERSION} \
              --output ./nupkgs
          else
            echo "Packing with version from .csproj"
            dotnet pack Phoenix.AlQaseh/Phoenix.AlQaseh.csproj \
              --configuration Release \
              --output ./nupkgs
          fi

      - name: ⬆️ Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: nupkgs
          path: ./nupkgs/*.nupkg

  publish_gpr:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')    # only on version tags
    runs-on: ubuntu-latest
    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: ⬇️ Download package artifact
        uses: actions/download-artifact@v4
        with:
          name: nupkgs
          path: ./nupkgs

      - name: 🚀 Push to GitHub Packages (GPR)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
        run: |
          for pkg in ./nupkgs/*.nupkg; do
            dotnet nuget push "$pkg" \
              --source "https://nuget.pkg.github.com/${OWNER}/index.json" \
              --api-key "$GITHUB_TOKEN" \
              --skip-duplicate
          done

  publish_nuget:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')    # only on version tags
    runs-on: ubuntu-latest
    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: ⬇️ Download package artifact
        uses: actions/download-artifact@v4
        with:
          name: nupkgs
          path: ./nupkgs

      - name: 🚀 Push to NuGet.org
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_KEY }}
        run: |
          for pkg in ./nupkgs/*.nupkg; do
            dotnet nuget push "$pkg" \
              --source https://api.nuget.org/v3/index.json \
              --api-key "$NUGET_API_KEY" \
              --skip-duplicate
          done
